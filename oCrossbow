//oCrossbow: Event: Create

firingdelay = 0;
recoil = 0;

//oCrossbow: Event: Begin Step

x = oPlayer0.x;
y = oPlayer0.y;



image_angle = point_direction(x, y, mouse_x, mouse_y) 

firingdelay = firingdelay - 1;
recoil = max(0, recoil - 1);

if (mouse_check_button(mb_left)) && (firingdelay < 0)
{
	recoil = 4;
	firingdelay = 50;
	with(instance_create_layer(x, y, "Projectiles", oArrow))
	{
		
		/*
		for (var arrowNum = 0; arrowNum < instance_count; arrowNum ++;)
		//{
		//	temp_arrow_id [arrowNum] = instance_id_get(oArrow);  
		  } 
		*/
		
		//FOR ARROW TRAJECTORY!!!
		
		/*
		if (shoot){
			gravity = gra;
		}
		
		Angle = point_direction(x, y, mouse_x, mouse_y)
		
		if (!shoot) {
			if (mouse_check_button(mb_left)){
				direction = Angle;
				speed = Speed;
				shoot = true;
			}
		}
		
		scr_ArrowTrajectory(x,Speed,Angle,0,0,gra);
		
		*/
		
		speed = 15;
		
		direction = other.image_angle + random_range(-1, 1); 
		
		image_angle = direction;
		
	}
}


//This useless thing took 2 days ;-; good for referance tho.

/*
for (var arrowNum = 0; arrowNum < instance_number(oArrow); arrowNum ++;)
{
	with (oArrow.temp_arrow_id[arrowNum])
	{

		Example usage: arrowDistance = point_distance(x1,y1,x2,y2); if (arrowDistance_x > 10 and arrowDistance_y >10)  (oArrow.id) speed += 0.1;
		 arrowDistance_x = oPlayer0.x - oArrow.x;
		 arrowDistance_y = oPlayer0.y - oArrow.y;
		 if (arrowDistance_x > 10) { speed -= 3 } //if (arrowDistance_y > 10) {y -= 5}
		temp_arrow_id [arrowNum].direction = oArrow.direction + (10 ^ 2 / 2 ^ 2);
		temp_arrow_id [arrowNum].image_angle = temp_arrow_id [arrowNum].direction;
		
	}
}
*/

//RECOIL EFFECT OF CROSSBOW
x = x - lengthdir_x(recoil, image_angle);
y = y - lengthdir_x(recoil, image_angle);

//CHANGING DIRECTION OF CROSSBOW WHEN TURNING
if (image_angle > 90) && (image_angle < 270)
{
	image_yscale = -1;
}
else
{
	image_yscale = 1;
}
